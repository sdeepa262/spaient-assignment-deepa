{"version":3,"sources":["Components/ModalData.js","Components/commonImageData.js","Components/ImageGrid.js","Components/launchSucessFailure.js","Components/yearData.js","Components/buttonData.js","Components/landingSuccess.js","Components/Home.js","Components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","position","width","height","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","top","left","bottom","ModalData","props","classes","Modal","open","onClose","handleClose","aria-labelledby","aria-describedby","className","onClick","id","imageName","GridListTile","src","imageUrl","alt","card","Cardcontent","CommonData","data","links","mission_patch_small","Card","variant","CardContent","Typography","color","gutterBottom","mission_name","flight_number","mission_id","map","ids","key","launch_year","launch_success","upcoming","root","display","flexWrap","overflow","gridList","flexDirection","gridListTile","ImageGrid","React","useState","setOpen","imageName2","imageUrl2","pageSize","currentPage","currentPage1","pagesCount","Math","ceil","spaceData","length","handleClick","e","index","window","scrollTo","behavior","GridList","cellHeight","cellWidth","slice","luanchSuccessTrue","handleOpen","Pagination","aria-label","PaginationItem","disabled","PaginationLink","previous","Array","page","i","active","next","LuanchSuccessData","filter","sucesslaunch","luanchSuccessValue","sucessdata","YearData","yearArrayData","yearButtonClickedTrue","buttonData","year","LandSuccessData","landingSuccessValue","HomeComponent","componentDidMount","fetch","then","response","json","repos","setState","filteryearData","filterYearData","console","log","state","successLaunchTrue","val","luanchSuccessFalse","landSuccessTrue","successLaunchFalse","successLandTrue","successLandFalse","yearButtonClicked","filterDataSucess","this","Fragment","CssBaseline","noWrap","Divider","Button","Component","withRouter","App","isUserAuthenticated","path","Home","exact","render","to","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5f4dada8.chunk.js","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        height: '550px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(1, 3, 3),\r\n        top: '5%',\r\n        left: '10%',\r\n        bottom: '5%'\r\n    },\r\n\r\n}));\r\n\r\nexport default function ModalData(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={props.open}\r\n                onClose={props.handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div className={classes.paper}>\r\n                    <span className=\"close-popup-modal\" onClick={() => props.handleClose()}>X</span>\r\n                    <h2 id=\"simple-modal-title\">{props.imageName}</h2>\r\n                    <GridListTile className=\"popup-img-width\">\r\n                        <img src={props.imageUrl} alt={props.imageUrl} />\r\n                    </GridListTile>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: 'white',\r\n        height: '200px',\r\n        border: 'none'\r\n    },\r\n    Cardcontent:{\r\n        padding : '0'\r\n    }\r\n}));\r\n\r\nexport default function CommonData(props) {\r\n    const classes = useStyles();\r\n    return (\r\n                          <div>\r\n                            <div className=\"image-style\">\r\n                                <img src={props.data.links.mission_patch_small} alt={props.data.links.mission_patch_small} />\r\n                            </div>\r\n                            <Card className={classes.card} variant=\"outlined\">\r\n                                <CardContent className={classes.Cardcontent}>\r\n                                    <Typography className=\"image-name\" color=\"textSecondary\" gutterBottom>\r\n                    {props.data.mission_name}<span className=\"flight-number\">#{props.data.flight_number}</span></Typography>\r\n                                </CardContent>\r\n                                <p className = \"mission-id\">Mission Ids:</p>\r\n                                {props.data.mission_id.map((ids, id) => (\r\n                                <ul key = {id} className=\"display-list\">\r\n                                <li><span className=\"add-color\">{ids}</span></li>\r\n                                </ul>\r\n                                ))}\r\n                                <div>\r\n                                <p className = \"mission-id\">Launch Year: <span className=\"add-color\">{props.data.launch_year}</span></p>\r\n                                </div>\r\n                                <div>\r\n                                <p className = \"mission-id\">Successful Launch: <span className=\"add-color\">{props.data.launch_success === true ? 'true' : 'false'}</span></p>\r\n                                </div>\r\n                                <div>\r\n                                <p className = \"mission-id\">Successful Landing:<span className=\"add-color\">{props.data.upcoming === true ? 'true' : 'false'}</span></p>\r\n                                </div>\r\n                            </Card>\r\n                            </div>\r\n    );\r\n}","import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\nimport ModalData from \"./ModalData\";\r\nimport CommonData from './commonImageData';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        overflow: 'hidden',\r\n        backgroundColor: 'lightgray',\r\n    },\r\n    gridList: {\r\n        width: \"100%\",\r\n        height: 'auto',\r\n        overflow: 'hidden',\r\n        ['@media (max-width:700px)']: {\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          },\r\n    },\r\n    gridListTile: {\r\n        width: '30%',\r\n    }\r\n}));\r\n\r\nexport default function ImageGrid(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [imageName, imageName2] = React.useState(null);\r\n    const [imageUrl, imageUrl2] = React.useState(null);\r\n    const [pageSize] = React.useState(12);\r\n    const [currentPage, currentPage1] = React.useState(0);\r\n    const pagesCount = Math.ceil(props.spaceData.length / pageSize );\r\n\r\n    const handleOpen = (data) => {\r\n        setOpen(true);\r\n        imageName2(data.mission_name)\r\n        imageUrl2(data.links.mission_patch_small)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const scrollToTop = (top) => {\r\n        window.scrollTo({\r\n            top: top ? top : 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    const handleClick = (e, index) => {\r\n        currentPage1(index)\r\n        scrollToTop();\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={400} cellWidth={100} className={classes.gridList}>\r\n                    {props.spaceData.slice(\r\n                        currentPage * pageSize,\r\n                        (currentPage + 1) * pageSize\r\n                    ).map((data) => (\r\n                        props.luanchSuccessTrue ? null: <GridListTile key={data.id} className=\"add-width\" onClick={() => handleOpen(data)}>\r\n                         <CommonData\r\n                         data ={data}/>\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n\r\n            </div>\r\n            <div className=\"pagination-wrapper\">\r\n\r\n                <Pagination aria-label=\"Page navigation example\">\r\n\r\n                    <PaginationItem disabled={currentPage <= 0}>\r\n\r\n                        <PaginationLink\r\n                            onClick={e => handleClick(e, currentPage - 1)}\r\n                            previous\r\n                        />\r\n\r\n                    </PaginationItem>\r\n\r\n                    {[...Array(pagesCount)].map((page, i) =>\r\n                        <PaginationItem active={i === currentPage} key={i}>\r\n                            <PaginationLink onClick={e => handleClick(e, i)}>\r\n                                {i + 1}\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    )}\r\n\r\n                    <PaginationItem disabled={currentPage >= pagesCount - 1}>\r\n\r\n                        <PaginationLink\r\n                            onClick={e => handleClick(e, currentPage + 1)}\r\n                            next\r\n                        />\r\n\r\n                    </PaginationItem>\r\n\r\n                </Pagination>\r\n            </div>\r\n            <div>\r\n                         <ModalData\r\n                         open={open}\r\n                         handleClose={handleClose}\r\n                         imageUrl={imageUrl}\r\n                         imageName ={imageName}\r\n                          />\r\n                        </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonData from './commonImageData';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: 'white',\r\n        height: '200px',\r\n        border: 'none'\r\n    },\r\n    Cardcontent:{\r\n        padding : '0'\r\n    }\r\n}));\r\n\r\nexport default function LuanchSuccessData(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={400} cellWidth={100} className={classes.gridList}>\r\n                {props.spaceData.filter(function(sucesslaunch){\r\n            return sucesslaunch.launch_success === props.luanchSuccessValue \r\n        }).map(function(sucessdata){\r\n            return <GridListTile key={sucessdata.id} className=\"add-width\">\r\n            <CommonData\r\n            data = {sucessdata}\r\n            />             \r\n            </GridListTile>\r\n        })}\r\n                </GridList>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonData from './commonImageData';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: 'white',\r\n        height: '200px',\r\n        border: 'none'\r\n    },\r\n    Cardcontent: {\r\n        padding: '0'\r\n    }\r\n}));\r\n\r\nexport default function YearData(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"width-100\">\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={400} cellWidth={100} className={classes.gridList}>\r\n                    {props.spaceData.filter(function (sucesslaunch) {\r\n                        return sucesslaunch.launch_year === props.yearArrayData\r\n                    }).map(function (sucessdata) {\r\n                        return (props.yearButtonClickedTrue ? <GridListTile key={sucessdata.id} className=\"add-width\">\r\n        <CommonData data = {sucessdata}/>  \r\n                        </GridListTile> : null)\r\n                    })}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export const buttonData = [\r\n    { \r\n        id:'1',\r\n        year:'2006'\r\n    },\r\n    { \r\n        id:'2',\r\n        year:'2007'\r\n    },\r\n    { \r\n        id:'3',\r\n        year:'2008'\r\n    },\r\n    { \r\n        id:'4',\r\n        year:'2009'\r\n    },\r\n    { \r\n        id:'5',\r\n        year:'2010'\r\n    },\r\n    { \r\n        id:'6',\r\n        year:'2011'\r\n    },\r\n    { \r\n        id:'7',\r\n        year:'2012'\r\n    },\r\n    { \r\n        id:'8',\r\n        year:'2013'\r\n    },\r\n    { \r\n        id:'9',\r\n        year:'2014'\r\n    },\r\n    { \r\n        id:'10',\r\n        year:'2015'\r\n    },\r\n    { \r\n        id:'11',\r\n        year:'2016'\r\n    },\r\n    { \r\n        id:'12',\r\n        year:'2017'\r\n    },\r\n    { \r\n        id:'13',\r\n        year:'2018'\r\n    },\r\n    { \r\n        id:'14',\r\n        year:'2019'\r\n    },\r\n    { \r\n        id:'15',\r\n        year:'2020'\r\n    },\r\n  \r\n];\r\n","import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonData from './commonImageData';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: 'white',\r\n        height: '200px',\r\n        border: 'none'\r\n    },\r\n    Cardcontent:{\r\n        padding : '0'\r\n    }\r\n}));\r\n\r\nexport default function LandSuccessData(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"width-100\">\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={400} cellWidth={100} className={classes.gridList}>\r\n                {props.spaceData.filter(function(sucesslaunch){\r\n            return sucesslaunch.upcoming === props.landingSuccessValue \r\n        }).map(function(sucessdata){\r\n            return <GridListTile key={sucessdata.id} className=\"add-width\">\r\n            <CommonData\r\n            data = {sucessdata}\r\n            />\r\n            </GridListTile>\r\n        })}\r\n                </GridList>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ImageGrid from './ImageGrid';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport './home.css';\r\nimport LuanchSuccessData from './launchSucessFailure';\r\nimport FilterYearData from './yearData'\r\nimport { buttonData } from './buttonData';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LandSuccessData from './landingSuccess';\r\n\r\nclass HomeComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            spaceData: [],\r\n            filterDataSucess: [],\r\n            luanchSuccessTrue: false,\r\n            filterYearData: [],\r\n            yearButtonClickedTrue: false,\r\n            yearArrayData: \"\",\r\n            landSuccessTrue: false,\r\n            luanchSuccessFalse: false,\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        let url = 'https://api.spaceXdata.com/v3/launches?limit=100';\r\n        fetch(url).then(response => response.json()).then((repos) => {\r\n            this.setState({ spaceData: repos });\r\n        });\r\n        let url2 = 'https://api.spacexdata.com/v3/launches?limit=100&launch_success=true&land_success=true&launch_year=2014';\r\n        fetch(url2).then(response => response.json()).then((filteryearData) => {\r\n            this.setState({ filterYearData: filteryearData });\r\n            console.log(this.state.filterYearData);\r\n        });\r\n    }\r\n\r\n    successLaunchTrue = (val) => {\r\n        this.setState({ luanchSuccessTrue: true })\r\n        this.setState({ luanchSuccessFalse: false })\r\n        this.setState({ landSuccessTrue: false })\r\n        this.setState({ yearButtonClickedTrue: false })\r\n        this.setState({ luanchSuccessValue: val })\r\n    }\r\n    successLaunchFalse = (val) => {\r\n        this.setState({ luanchSuccessFalse: true })\r\n        this.setState({ luanchSuccessTrue: false })\r\n        this.setState({ landSuccessTrue: false })\r\n        this.setState({ yearButtonClickedTrue: false })\r\n        this.setState({ luanchSuccessValue: val })\r\n    }\r\n    successLandTrue = (val) => {\r\n        this.setState({ landSuccessTrue: true })\r\n        this.setState({ luanchSuccessFalse: false })\r\n        this.setState({ luanchSuccessTrue: false })\r\n        this.setState({ yearButtonClickedTrue: false })\r\n        this.setState({ landingSuccessValue: val })\r\n    }\r\n    successLandFalse = (val) => {\r\n        this.setState({ landSuccessTrue: true })\r\n        this.setState({ luanchSuccessFalse: false })\r\n        this.setState({ luanchSuccessTrue: false })\r\n        this.setState({ yearButtonClickedTrue: false })\r\n        this.setState({ landingSuccessValue: val })\r\n    }\r\n    yearButtonClicked = (year) => {\r\n        this.setState({ yearButtonClickedTrue: true })\r\n        this.setState({ luanchSuccessFalse: false })\r\n        this.setState({ landSuccessTrue: false })\r\n        this.setState({ yearArrayData: year })\r\n        this.setState({ luanchSuccessTrue: false })\r\n    }\r\n\r\n\r\n    render() {\r\n        let { spaceData } = this.state;\r\n        if (spaceData.length <= 0) {\r\n            return <p>Loading...</p>\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <div className=\"main-container\">\r\n                    <div className=\"header-text\">\r\n                        <Typography variant=\"h6\" noWrap>SpaceX Launch Programs </Typography>\r\n                    </div>\r\n                    <div className=\"wrapper\" >\r\n                        <div className=\"sidenavdiv\">\r\n                            <nav className=\"sidenavdrawer\" aria-label=\"mailbox folders\">\r\n                                <Typography className=\"filter\">Filters</Typography>\r\n                                <Typography>Launch Year\r\n                    <div className=\"divider-div\">\r\n                                        <Divider className=\"divider\" />\r\n                                    </div>\r\n                                </Typography>\r\n\r\n                                {buttonData.map((data, id) => (\r\n                                    <Button key={data.id} variant=\"contained\" className=\"year-button\" onClick={() => { this.yearButtonClicked(data.year) }}>\r\n                                        {data.year}\r\n                                    </Button>\r\n                                ))}\r\n                                <Typography>Successful Launch\r\n                    <div className=\"divider-div\">\r\n                                        <Divider className=\"divider\" />\r\n                                    </div>\r\n                                </Typography>\r\n\r\n                                <Button variant=\"contained\" className={this.state.luanchSuccessTrue ? \"year-button-clicked\" : \"year-button\"} onClick={() => { this.successLaunchTrue(true) }}>true</Button>\r\n                                <Button variant=\"contained\" className={this.state.luanchSuccessFalse ? \"year-button-clicked\" : \"year-button\"} onClick={() => { this.successLaunchFalse(false) }}>false</Button>\r\n                                <Typography>Successful Landing\r\n                    <div className=\"divider-div\">\r\n                                        <Divider className=\"divider\" />\r\n                                    </div>\r\n                                </Typography>\r\n\r\n                                <Button variant=\"contained\" className=\"year-button\" onClick={() => { this.successLandTrue(true) }}>true</Button>\r\n                                <Button variant=\"contained\" className=\"year-button\" onClick={() => { this.successLandFalse(false) }}>false</Button>\r\n                            </nav>\r\n                        </div>\r\n                        {this.state.luanchSuccessTrue || this.state.yearButtonClickedTrue || \r\n                        this.state.landSuccessTrue || this.state.luanchSuccessFalse ? null :\r\n                            <ImageGrid\r\n                                luanchSuccessTrue={this.state.luanchSuccessTrue}\r\n                                spaceData={this.state.spaceData}\r\n                                currentPage={this.state.currentPage}\r\n                                pageSize={this.state.pageSize}\r\n                            />}\r\n                        {this.state.luanchSuccessTrue || this.state.luanchSuccessFalse ?\r\n                            <LuanchSuccessData\r\n                                spaceData={this.state.spaceData}\r\n                                luanchSuccessValue={this.state.luanchSuccessValue}\r\n                                luanchSuccessTrue={this.state.luanchSuccessTrue}\r\n                                currentPage={this.state.currentPage}\r\n                                pageSize={this.state.pageSize}\r\n                            /> : null}\r\n                        {this.state.yearButtonClickedTrue ?\r\n                            <FilterYearData\r\n                                yearArrayData={this.state.yearArrayData}\r\n                                luanchSuccessValue={this.state.luanchSuccessValue}\r\n                                spaceData={this.state.spaceData}\r\n                                filterYearData={this.state.filterYearData}\r\n                                yearButtonClickedTrue={this.state.yearButtonClickedTrue}\r\n                                pageSize={this.state.pageSize}\r\n                            /> : null}\r\n                        {this.state.landSuccessTrue ?\r\n                            <LandSuccessData\r\n                                spaceData={this.state.spaceData}\r\n                                landingSuccessValue={this.state.landingSuccessValue}\r\n                            /> : null}\r\n                    </div>\r\n                    <Typography color=\"textSecondary\" gutterBottom className=\"black\">\r\n                        <b>Developed By:</b><span>Deepa S</span></Typography>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HomeComponent);","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport HomeComponent from './Home';\nimport './home.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isUserAuthenticated: true\n    };\n}\nrender(){\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n  <Route path=\"/home\">\n    <HomeComponent />\n  </Route>\n    {/* The default route */}\n  <Route\n    exact\n    path=\"/\"\n    render={() => {\n        return (\n            this.state.isUserAuthenticated ?\n            <Redirect to=\"/home\" /> :\n            null\n        )\n    }}\n/>\n</Switch>\n</Router>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}